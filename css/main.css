@charset "UTF-8";
/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485



*/
html {
  font-size: 62.5%; }

/* GLOBAL RESET AGGIORNATO */
*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  /* Settando la proprietà su inherit, questo valore automaticamente verrà settato per la proprietà 'box-sizing' di tutti gli elementi. Nel body settiamo il valore della proprietà che verrà ereditata da tutti gli elementi. */
  box-sizing: inherit; }

/* Tutte queste proprietà indicate nel body verranno ereditate nel documento */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /* Questa proprietà verrà ereditata da tutti gli elementi della pagina */
  box-sizing: border-box; }

/* HEADER */
.header {
  height: 95vh;
  position: relative;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.primary-heading {
  color: white;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /* Questa proprietà viene usata come hack perchè in alcune animazioni, come translate, avviene una sorta di balzo verso l'alto. */
  /* backface-visibility: hidden; */ }
  .primary-heading--title {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    /* animation-delay: 3s;  L'animazione partirà dopo 3 secondi 
      animation-iteration-count: 3; L'animazione verrà ripetuta 3 volte 
      animation-timing-function: ease-out; */ }
  .primary-heading--subtitle {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation-name: moveInRight;
    animation-duration: 1s; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

.btn:link, .btn:visited {
  display: inline-block;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  transition: all 250ms;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    /* Quando facciamo l'hover sul bottone creiamo uno stile all'elemento after */
    transform: scaleX(1.4) scaleY(1.6);
    /* Abbinato alla proprietà transition crea una sorta di fading */
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  /* Dimezziamo l'ombra per dare l'impressione che il bottone si allontani */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  color: #777;
  background-color: white; }

.btn--animated {
  animation-name: moveInBottom;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  animation-delay: 0.75s;
  /* Questa proprietà applica lo stile del keyframe iniziale durante il periodo di delay dell'animazione*/
  animation-fill-mode: backwards; }

.btn::after {
  display: inline-block;
  content: "";
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* Per farlo apparire dietro lo posizioniamo assolutamente e lo z-index -1*/
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
  background-color: white; }
